.386
      .model flat, stdcall
      option casemap :none   ; case sensitive
;#########################################################################
      include \masm32\include\windows.inc
      include \masm32\include\user32.inc
      include \masm32\include\kernel32.inc
      includelib \masm32\lib\user32.lib
      includelib \masm32\lib\kernel32.lib
;#########################################################################
    .data
    divisor    db 10d                   ; Переменная-делитель. Один байт, значение 10d
    sfc        db "%.4lX",0             ; Строка формата для API-функции wsprintf
    sResult byte 2*2+1 dup (0BBh)       ; Будущая строка с текстом числа длиной 5 байт (BB - от балды)
    MsgCaption db "Результат ",0 ; Заголовок сообщения


;Пример:  37 + 9 - z :m *x       где: x=5 y=2 z=3 m=1 n=4

; Заносим данные:
z=3
m=1
x=5

;37 + 9 - z :m *x

;#########################################################################

   

 .code
start:
xor    EAX,EAX            ; обнуляем EAX

;z :m
mov ax,z
mov dx,0
mov cx,m
div cx
mov cx,ax

call   HexMessage         ; показать результат

;z :m *x
mov ax,x
mul cx
mov cx,ax

call   HexMessage         ; показать результат

;9 - z :m *x
mov ax,9
sub ax,cx
mov cx,ax

call   HexMessage         ; показать результат

;37 + 9 - z :m *x
mov bx,37
add bx,cx
mov ax,bx    
    
call   HexMessage         ; показать результат


	push   0                  ; пустой параметр для подпрограммы выхода
	call   ExitProcess        ; вызов API-функции выхода
;-------------------------------------------------------------------------
HexMessage proc               ; начало функции вывода hex-сообщения
; Вход:  EAX содержит hex-число, которое будет показано в сообщении
; Выход: ничего.
; Используются глобальные переменные: 
; MsgCaption, sResult, sfc,
pushad                        ; сохраняем в стек все 8 E-регистров общего назначения

; вызов API-функции перевода числа в строку текста
;                адрес будущей строки| адрес строки формата| число        
invoke wsprintf, ADDR sResult,         ADDR sfc,             EAX

; вызов API-функции вывода сообщения на экран
;                  родительское окно|адрес текста| адрес заголовка| стиль
invoke MessageBox, NULL,             addr sResult, addr MsgCaption, MB_OK 

popad                         ; извлекаем из стека все 8 E-регистров общего назначения

ret
HexMessage endp               ; конец функции вывода hex-сообщения
;-------------------------------------------------------------------------
end start                     ; конец программы
